name: Release

on:
  push:
    tags:
      - '*'

jobs:
  build-and-release:
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-apple-darwin
            os: macos-latest
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install Trunk
        run: cargo install trunk

      - name: Install wasm-bindgen
        run: cargo install wasm-bindgen-cli

      - name: Install wasm32 target
        run: rustup target add wasm32-unknown-unknown

      - name: Extract version
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Install cross-compilation tools
        uses: k0lter/setup-cross-toolchain-action@v1
        with:
          target: ${{ matrix.target }}
        if: matrix.os == 'ubuntu-latest'

      - name: Install dependencies (linux)
        run: |
          sudo apt-get update
          sudo apt-get install libssl-dev
        if: matrix.os == 'ubuntu-latest'

      - name: Build project
        run: make all VERSION=${{ env.VERSION }} TARGET=${{ matrix.target }}

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.ref_name }}
          files: toothpaste-${{ env.VERSION }}-${{ matrix.target }}.tar.gz
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
